[{"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\index.js":"1","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\MenuBurguer.jsx":"2","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\App.jsx":"3","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Formulario.jsx":"4","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\DataTable.jsx":"5","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Adjuntos.jsx":"6","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\EditorTexto.jsx":"7","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Cantantes.jsx":"8","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Cats.jsx":"9","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Games.jsx":"10","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Companys.jsx":"11","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Consolas.jsx":"12"},{"size":251,"mtime":1608810190969,"results":"13","hashOfConfig":"14"},{"size":612,"mtime":1608018435607,"results":"15","hashOfConfig":"14"},{"size":1040,"mtime":1608021287617,"results":"16","hashOfConfig":"14"},{"size":196,"mtime":1607952173257,"results":"17","hashOfConfig":"14"},{"size":834,"mtime":1608807392887,"results":"18","hashOfConfig":"14"},{"size":168,"mtime":1608021339888,"results":"19","hashOfConfig":"14"},{"size":178,"mtime":1608021353341,"results":"20","hashOfConfig":"14"},{"size":10597,"mtime":1609146968123,"results":"21","hashOfConfig":"14"},{"size":1643,"mtime":1608807005319,"results":"22","hashOfConfig":"14"},{"size":1822,"mtime":1608807074022,"results":"23","hashOfConfig":"14"},{"size":4248,"mtime":1608807081732,"results":"24","hashOfConfig":"14"},{"size":9031,"mtime":1608810052975,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"ln6gn3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\index.js",["57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  // <React.StrictMode>\n      <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n",["58","59"],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\MenuBurguer.jsx",["60","61"],"import React from 'react';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { slide as Menu } from 'react-burger-menu';\r\n\r\nconst MenuBurguer = (props) => {\r\n    return (\r\n        <Menu {...props}>\r\n            <a className=\"menu-item\" href=\"/\">Home</a>\r\n            <a className=\"menu-item\" href=\"/adjuntos\">Adjuntos</a>\r\n            <a className=\"menu-item\" href=\"/dataTable\">Data Table</a>\r\n            <a className=\"menu-item\" href=\"/editorTexto\">Editor Texto</a>\r\n            <a className=\"menu-item\" href=\"/formulario\">Formulario</a>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default MenuBurguer;\r\n","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\App.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Formulario.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\DataTable.jsx",["62","63","64","65","66","67"],"// eslint-disable-next-line react-hooks/exhaustive-deps\r\nimport React, { useState, useRef } from 'react';\r\nimport Cantantes from './Tablas/Cantantes';\r\nimport Cats from './Tablas/Cats';\r\nimport Companys from './Tablas/Companys';\r\nimport Games from './Tablas/Games';\r\nimport Consolas from './Tablas/Consolas';\r\n\r\nconst DataTable = (props) => {\r\n\r\n    // -------------------------------------------------> R E T U R N <-------------------------------------------------\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* <Games /> */} {/* AG GRIND*/}\r\n            {/* <Companys /> */} {/* DATA GRIND MATERIAL*/}\r\n            {/* <Cats /> */} {/* HTML TABLE + EXCEL*/}\r\n            <Cantantes />  {/* MATERIAL TABLE*/}\r\n            {/*<Consolas />*/} {/* MATERIAL CONTAINER + CRUD*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTable\r\n","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Adjuntos.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\EditorTexto.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Cantantes.jsx",["68","69","70"],"import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Export from '@material-ui/icons/ImportExport'\r\nimport Clear from '@material-ui/icons/Clear'\r\nimport axios from 'axios';\r\nimport { Modal, TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CsvBuilder from 'react-csv'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    iconos: {\r\n        cursor: 'pointer'\r\n    },\r\n    inputMaterial: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\n\r\nconst columnas = [\r\n    { title: 'Artista', field: 'artista' },\r\n    { title: 'Pais de Origen', field: 'pais' },\r\n    { title: 'Género', field: 'genero' },\r\n    { title: 'Ventas estimadas', field: 'ventas', type: 'numeric' }\r\n]\r\n\r\nconst baseUrl = 'http://localhost:3001/cantantes/';\r\n\r\nconst Cantantes = () => {\r\n\r\n    // ************************************************* VARIABLES *************************************************\r\n\r\n    const styles = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [cantanteSelect, setCantanteSelect] = useState({ id: \"\", artista: \"\", genero: \"\", pais: \"\", ventas: \"\" });\r\n\r\n    const [modoCrear, setModoCrear] = useState(false);\r\n    const [modoEditar, setModoEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n\r\n\r\n    // ************************************************* FUNCIONES *************************************************\r\n\r\n    // --------> USE EFFECT\r\n\r\n    useEffect(() => {\r\n        const peticionGet = async () => {\r\n            await axios.get(baseUrl)\r\n                .then(response => (\r\n                    setData(response.data)\r\n                ))\r\n        }\r\n        peticionGet();\r\n    }, []);\r\n\r\n\r\n    // --------> HANDLECHANGE\r\n\r\n    // El name tiene que coincidir con el name del textField, asi cogerá magicamente los valores de estos.\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setCantanteSelect(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n\r\n    // --------> PETICIONES\r\n\r\n    const peticionPostCrear = async () => {\r\n        await axios.post(baseUrl, cantanteSelect)\r\n            .then(response => {\r\n                setData(...data, response.data);\r\n                abrirCerrarFormCrear();\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const peticionPutEditar = async () => {\r\n        await axios.put(baseUrl + \"/\" + cantanteSelect.id, cantanteSelect)\r\n            .then(response => {\r\n                var dataNueva = data;\r\n                dataNueva.map(artista => {\r\n                    if (artista.id === cantanteSelect.id) {\r\n                        artista.artista = cantanteSelect.artista;\r\n                        artista.genero = cantanteSelect.genero;\r\n                        artista.pais = cantanteSelect.pais;\r\n                        artista.ventas = cantanteSelect.ventas;\r\n                    }\r\n                });\r\n                setData(dataNueva);\r\n                abrirCerrarFormEditar();\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    const peticionDeleteEliminar = async () => {\r\n        await axios.delete(baseUrl + \"/\" + cantanteSelect.id)\r\n            .then(response => {\r\n                setData(data.filter(artista => artista.id !== cantanteSelect.id));\r\n                abrirCerrarModalEliminar();\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    // --------> FOMULARIOS\r\n\r\n    const seleccionarArtista = (artista, caso) => {\r\n        setCantanteSelect(artista);\r\n        (caso === \"Editar\") && abrirCerrarFormEditar();\r\n        (caso === \"Eliminar\") && abrirCerrarModalEliminar();\r\n    }\r\n\r\n    // 1. CREAR\r\n\r\n    const abrirCerrarFormCrear = () => {\r\n        setModoCrear(!modoCrear);\r\n    }\r\n\r\n\r\n    // 2. EDITAR\r\n\r\n    const abrirCerrarFormEditar = () => {\r\n        setModoEditar(!modoEditar);\r\n    }\r\n\r\n    // 3. ELIMINAR\r\n\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const bodyEliminar = (\r\n        <div className={styles.modal}>\r\n            <h3>Nuevo Cantante</h3>\r\n            <p>¿Estás seguro que deseas eliminar el artista {cantanteSelect.artista}?</p>\r\n            <div align=\"right\" className=\"mt-4\">\r\n                <Button onClick={() => peticionDeleteEliminar()} color=\"primary\">Si</Button>\r\n                <Button onClick={() => abrirCerrarModalEliminar()} color=\"secondary\">No</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    // --------> EXCEL\r\n\r\n    const customExcel = () => {\r\n\r\n        if(this.props.exportCsv) {\r\n        this.props.exportCsv(this.props.columns, this.props.renderData)\r\n        }\r\n        else  {\r\n            const columns = this.props.columns\r\n              .filter(columnDef => {\r\n                return !columnDef.hidden && columnDef.field && columnDef.export !== false; \r\n              });\r\n        \r\n            const data = this.props.renderData.map(rowData =>\r\n              columns.map(columnDef => rowData[columnDef.field])\r\n            );\r\n        \r\n            // eslint-disable-next-line no-unused-vars\r\n            const builder = new CsvBuilder((this.props.exportFileName || this.props.title || 'data') + '.csv')\r\n              .setDelimeter(this.props.exportDelimiter)\r\n              .setColumns(columns.map(columnDef => columnDef.title))\r\n              .addRows(data)\r\n              .exportFile();\r\n        \r\n            this.setState({ exportButtonAnchorEl: null });\r\n          }\r\n        }\r\n\r\n\r\n\r\n\r\n    // ************************************************* RETURN *************************************************\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-grid gap-2\">\r\n                <button className=\"btn btn-dark my-2\" onClick={() => abrirCerrarFormCrear()}>Insertar Artista</button>\r\n            </div>\r\n\r\n            <MaterialTable\r\n                columns={columnas}\r\n                data={data}\r\n                title=\"Artistas Musicales con Mayores Ventas\"\r\n                actions={[\r\n                    {\r\n                        icon: Edit,\r\n                        tooltip: 'Editar',\r\n                        onClick: (event, rowData) => seleccionarArtista(rowData, \"Editar\")\r\n                    },\r\n                    {\r\n                        icon: Delete,\r\n                        tooltip: 'Eliminar',\r\n                        onClick: (event, rowData) => seleccionarArtista(rowData, \"Eliminar\")\r\n                    }\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    //exportCsv: customExcel()\r\n                }}\r\n                localization={{\r\n                    header: {\r\n                        actions: 'Acciones'\r\n                    }\r\n                }}\r\n                icons={{\r\n                    Search: Search,\r\n                    Clear: Clear,\r\n                    Export: Export\r\n                }}\r\n            >\r\n            </MaterialTable>\r\n\r\n            <Modal\r\n                open={modalEliminar}\r\n                onClose={abrirCerrarModalEliminar}>\r\n                {bodyEliminar}\r\n            </Modal>\r\n\r\n            <div className=\"mt-5\">\r\n                {\r\n                    modoCrear &&\r\n                    <h5 className=\"text-center\">Nuevo Cantante</h5>\r\n                }\r\n                {\r\n                    modoEditar &&\r\n                    <h5 className=\"text-center\">Editar Cantante</h5>\r\n                }\r\n                {\r\n                    modoCrear &&\r\n                    <form >\r\n                        <input className={styles.inputMaterial} placeholder=\"Id\" name=\"id\" onChange={handleChange}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Artista\" name=\"artista\" onChange={handleChange}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Pais de Origen\" name=\"pais\" onChange={handleChange}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Género\" name=\"genero\" onChange={handleChange}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Ventas estimadas\" name=\"ventas\" onChange={handleChange}></input>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button className=\"btn btn-primary mt-2\" onClick={() => peticionPostCrear()}>Crear Cantante</button>\r\n                            <button className=\"btn btn-danger\" onClick={() => abrirCerrarFormCrear()}>Cancelar</button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                {\r\n                    modoEditar &&\r\n                    <form >\r\n                        <input className={styles.inputMaterial} placeholder=\"Artista\" name=\"artista\" onChange={handleChange} value={cantanteSelect && cantanteSelect.artista}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Pais de Origen\" name=\"pais\" onChange={handleChange} value={cantanteSelect && cantanteSelect.pais}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Género\" name=\"genero\" onChange={handleChange} value={cantanteSelect && cantanteSelect.genero}></input>\r\n                        <input className={styles.inputMaterial} placeholder=\"Ventas estimadas\" name=\"ventas\" onChange={handleChange} value={cantanteSelect && cantanteSelect.ventas}></input>\r\n                        <div className=\"d-grid gap-2\">\r\n                            <button className=\"btn btn-primary mt-2\" onClick={() => peticionPutEditar()}>Editar Cantante</button>\r\n                            <button className=\"btn btn-danger\" onClick={() => abrirCerrarFormEditar()}>Cancelar</button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cantantes\r\n","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Cats.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Games.jsx",["71","72","73","74","75","76","77"],"import React, { useState, useRef } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport { AgGridReact as AgGridReactType } from 'ag-grid-react/lib/agGridReact'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nconst Games = () => {\r\n\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n\r\n    const [rowData, setRowData] = useState([\r\n        { titulo: \"Metal Gear Solid\", genero: \"Accion-Aventura\", año: 1999 },\r\n        { titulo: \"Final Fantasy X\", genero: \"RPG\", año: 2002 },\r\n        { titulo: \"The Last Of Us Part II\", genero: \"Accion-Aventura\", año: 2020 },\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <h4>DataTable AG-GRIND</h4>\r\n                <div className=\"ag-theme-alpine\" style={{ height: 250, width: 600 }}>\r\n                    <div>\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"btnExportarExcel\" className=\"btn btn-dark mt-4\" table=\"tablaJuegos\" filename=\"JuegoExcel\" sheet=\"P1\" buttonText=\"Excel\" />\r\n                    </div>\r\n                    <AgGridReact rowData={rowData} rowSelection=\"multiple\" className=\"mt-2\" id=\"tablaJuegos\">\r\n                        <AgGridColumn field=\"titulo\" sortable={true} filter={true} checkboxSelection={true}></AgGridColumn>\r\n                        <AgGridColumn field=\"genero\" sortable={true} filter={true}></AgGridColumn>\r\n                        <AgGridColumn field=\"año\" sortable={true} filter={true}></AgGridColumn>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Games\r\n","C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Companys.jsx",[],"C:\\xampp2\\htdocs\\REACT-Test1\\react-test1\\src\\components\\Tablas\\Consolas.jsx",["78"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableContainer, TableHead, TableCell, TableBody, TableRow, Modal, Button, TextField } from \"@material-ui/core\";\r\nimport { Edit, Delete } from '@material-ui/icons';\r\n\r\nconst baseUrl = 'http://localhost:3001/consolas/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    iconos: {\r\n        cursor: 'pointer'\r\n    },\r\n    inputMaterial: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\n\r\nconst Consolas = () => {\r\n\r\n    // ************************************************* VARIABLES *************************************************\r\n\r\n    const styles = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [modalInsertar, setModalInsertar] = useState(false);\r\n    const [modalEditar, setModalEditar] = useState(false);\r\n    const [modalEliminar, setModalEliminar] = useState(false);\r\n\r\n    const [consolaSeleccionada, setConsolaSeleccionada] = useState({\r\n        nombre: '',\r\n        empresa: '',\r\n        lanzamiento: '',\r\n        ventas: ''\r\n    })\r\n\r\n    // ************************************************* FUNCIONES *************************************************\r\n\r\n    // --------> USE EFFECT\r\n\r\n    useEffect(() => {\r\n        const peticionGet = async () => {\r\n            await axios.get(baseUrl)\r\n                .then(response => (\r\n                    setData(response.data)\r\n                ))\r\n        }\r\n\r\n        peticionGet();\r\n    }, []);\r\n\r\n    // --------> HANDLECHANGE\r\n\r\n    // El name tiene que coincidir con el name del textField, asi coga magicamente los valores de estos.\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setConsolaSeleccionada(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n        console.log(consolaSeleccionada)\r\n    }\r\n\r\n    \r\n    // --------> PETICIONES\r\n\r\n    const peticionPost = async () => {\r\n        await axios.post(baseUrl, consolaSeleccionada)\r\n            .then(response => {\r\n                setData(data.concat(response.data));\r\n                abrirCerrarModalInsertar();\r\n            })\r\n    }\r\n\r\n    const peticionPut = async () => {\r\n        await axios.put(baseUrl + consolaSeleccionada.id, consolaSeleccionada)\r\n            .then(response => {\r\n                var dataNueva = data;\r\n                dataNueva.map(consola => {\r\n                    if (consolaSeleccionada.id === consola.id) {\r\n                        consola.nombre = consolaSeleccionada.nombre;\r\n                        consola.empresa = consolaSeleccionada.empresa;\r\n                        consola.lanzamiento = consolaSeleccionada.lanzamiento;\r\n                        consola.ventas = consolaSeleccionada.ventas;\r\n                    }\r\n                })\r\n                setData(dataNueva);\r\n                abrirCerrarModalEditar();\r\n            })\r\n    }\r\n\r\n    const peticionDelete = async () => {\r\n        await axios.delete(baseUrl + consolaSeleccionada.id)\r\n            .then(response => {\r\n                setData(data.filter(consola=>consola.id !== consolaSeleccionada.id));\r\n\r\n                })\r\n                abrirCerrarModalEliminar();\r\n    }\r\n\r\n    // --------> MODALES\r\n\r\n    const seleccionarConsola = (consola, caso) => {\r\n        setConsolaSeleccionada(consola);\r\n        (caso === 'Editar') ? abrirCerrarModalEditar() : abrirCerrarModalEliminar();\r\n    }\r\n\r\n    // 1. CREAR\r\n\r\n    const abrirCerrarModalInsertar = () => {\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n\r\n    const bodyInsertar = (\r\n        <div className={styles.modal}>\r\n            <h3>Agregar nueva Consola</h3>\r\n            <TextField className={styles.inputMaterial} label=\"Nombre\" name=\"nombre\" onChange={handleChange} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Empresa\" name=\"empresa\" onChange={handleChange} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Lanzamiento\" name=\"lanzamiento\" onChange={handleChange} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Unidades Vendidas\" name=\"ventas\" onChange={handleChange} />\r\n            <br />\r\n            <div align=\"right\" className=\"mt-4\">\r\n                <Button onClick={() => peticionPost()} color=\"primary\">Insertar</Button>\r\n                <Button onClick={() => abrirCerrarModalInsertar()} color=\"secondary\">Cancelar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    // 2. EDITAR\r\n\r\n    const abrirCerrarModalEditar = () => {\r\n        setModalEditar(!modalEditar);\r\n    }\r\n\r\n    const bodyEditar = (\r\n        <div className={styles.modal}>\r\n            <h3>Editar Consola</h3>\r\n            <TextField className={styles.inputMaterial} label=\"Nombre\" name=\"nombre\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.nombre} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Empresa\" name=\"empresa\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.empresa} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Lanzamiento\" name=\"lanzamiento\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.lanzamiento} />\r\n            <br />\r\n            <TextField className={styles.inputMaterial} label=\"Unidades Vendidas\" name=\"ventas\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.ventas} />\r\n            <br />\r\n            <div align=\"right\" className=\"mt-4\">\r\n                <Button onClick={() => peticionPut()} color=\"primary\">Editar</Button>\r\n                <Button onClick={() => abrirCerrarModalEditar()} color=\"secondary\">Cancelar</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    // 3. ELIMINAR\r\n\r\n    const abrirCerrarModalEliminar = () => {\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const bodyEliminar = (\r\n        <div className={styles.modal}>\r\n            <p>¿Estás seguro que deseas eliminar la consola {consolaSeleccionada && consolaSeleccionada.nombre}</p>\r\n            <div align=\"right\" className=\"mt-4\">\r\n                <Button onClick={() => peticionDelete()} color=\"primary\">Si</Button>\r\n                <Button onClick={() => abrirCerrarModalEliminar()} color=\"secondary\">No</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    // ************************************************* RETURN *************************************************\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => abrirCerrarModalInsertar()} className=\"btn btn-dark\">Insertar</button>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nombre</TableCell>\r\n                            <TableCell>Empresa</TableCell>\r\n                            <TableCell>Año de Lanzamiento</TableCell>\r\n                            <TableCell>Unidades Vendidas</TableCell>\r\n                            <TableCell>Acciones</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {data.map(consola => (\r\n                            <TableRow key={consola.id}>\r\n                                <TableCell>{consola.nombre}</TableCell>\r\n                                <TableCell>{consola.empresa}</TableCell>\r\n                                <TableCell>{consola.lanzamiento}</TableCell>\r\n                                <TableCell>{consola.ventas}</TableCell>\r\n                                <TableCell>\r\n                                    <Edit className={styles.iconos} onClick={() => seleccionarConsola(consola, 'Editar')} />\r\n                                    <Delete className={styles.iconos} onClick={() => seleccionarConsola(consola, 'Eliminar')} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))\r\n\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Modal\r\n                open={modalInsertar}\r\n                onClose={abrirCerrarModalInsertar}>\r\n                {bodyInsertar}\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={modalEditar}\r\n                onClose={abrirCerrarModalEditar}>\r\n                {bodyEditar}\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={modalEliminar}\r\n                onClose={abrirCerrarModalEliminar}>\r\n                {bodyEliminar}\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Consolas\r\n",{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":21},{"ruleId":"79","severity":1,"message":"88","line":2,"column":23,"nodeType":"81","messageId":"82","endLine":2,"endColumn":38},{"ruleId":"79","severity":1,"message":"89","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"90","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":33},{"ruleId":"79","severity":1,"message":"91","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":12},{"ruleId":"79","severity":1,"message":"92","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":16},{"ruleId":"79","severity":1,"message":"93","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":13},{"ruleId":"79","severity":1,"message":"94","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":16},{"ruleId":"79","severity":1,"message":"95","line":9,"column":17,"nodeType":"81","messageId":"82","endLine":9,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":100,"column":39,"nodeType":"98","messageId":"99","endLine":100,"endColumn":41},{"ruleId":"79","severity":1,"message":"100","line":167,"column":11,"nodeType":"81","messageId":"82","endLine":167,"endColumn":22},{"ruleId":"79","severity":1,"message":"90","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":33},{"ruleId":"79","severity":1,"message":"101","line":3,"column":25,"nodeType":"81","messageId":"82","endLine":3,"endColumn":40},{"ruleId":"79","severity":1,"message":"102","line":10,"column":12,"nodeType":"81","messageId":"82","endLine":10,"endColumn":19},{"ruleId":"79","severity":1,"message":"103","line":10,"column":21,"nodeType":"81","messageId":"82","endLine":10,"endColumn":31},{"ruleId":"79","severity":1,"message":"104","line":11,"column":12,"nodeType":"81","messageId":"82","endLine":11,"endColumn":25},{"ruleId":"79","severity":1,"message":"105","line":11,"column":27,"nodeType":"81","messageId":"82","endLine":11,"endColumn":43},{"ruleId":"79","severity":1,"message":"106","line":13,"column":21,"nodeType":"81","messageId":"82","endLine":13,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":90,"column":39,"nodeType":"98","messageId":"99","endLine":90,"endColumn":41},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'createStore' is defined but never used.","'combineReducers' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'Cats' is defined but never used.","'Companys' is defined but never used.","'Games' is defined but never used.","'Consolas' is defined but never used.","'TextField' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'customExcel' is assigned a value but never used.","'AgGridReactType' is defined but never used.","'gridApi' is assigned a value but never used.","'setGridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'setGridColumnApi' is assigned a value but never used.","'setRowData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]